name: build
run-name: 'üõ†Ô∏è Build - [${{ github.ref_name }}' ]

on:
  push:
    branches:
      - $default-branch
      - $protected-branch
  pull_request:
    paths-ignore:
      - 'assets/**'
      - 'docs/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Go Build
    runs-on: ubuntu-latest
    steps:
      - name: Go Setup ‚öôÔ∏è
        uses: ./.github/workflows/go.yml

      - name: Go Build üõ†Ô∏è
        run: go build -v ./...

  test-unit:
    name: Go Unit Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - '1.20'
          - '1.21'
          - '1.22'
    needs:
      - build
    steps:
      - name: Go Setup ‚öôÔ∏è
        uses: ./.github/workflows/go.yml
        with:
          go-version: ${{ matrix.go-version }}

      - name: Go Unit Test üß™
        run: go test ./... -v -coverprofile=unit-test.lcov -covermode count -json > unit-test.log

      - name: Upload Unit Test Artifacts ‚è´
        uses: actions/upload-artifact@v4.3.4
        if: success()
        with:
          name: unit-test-reports-${{ github.sha }}
          path: |
            unit-test.lcov
            unit-test.log
          retention-days: 7
          overwrite: true
          compression-level: 1 # best speed

  test-acc:
    name: Go Acceptance Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tf-version:
          - '1.6.*'
          - '1.7.*'
          - '1.8.*'
    steps:
      - name: Go Setup ‚öôÔ∏è
        uses: ./.github/workflows/go.yml

      - name: Terraform Setup üèóÔ∏è
        uses: hashicorp/setup-terraform@v1.6.0
        with:
          terraform_version: ${{ matrix.tf-version }}
          terraform_wrapper: false

      - name: Go Acceptance Test üß™
        run: go test ./internal/provider -v -coverprofile=acc-test.lcov -json > acc-test.log
        env:
          TF_ACC: '1'

      - name: Upload coverage reports to Codecov ‚òÇÔ∏è
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          files: unit-test.lcov,acc-test.lcov

      - name: Upload Acceptance Test Artifacts ‚è´
        uses: actions/upload-artifact@v4.3.4
        if: success()
        with:
          name: acc-test-reports-${{ github.sha }}
          path: |
            acc-test.lcov
            acc-test.log
          retention-days: 7
          overwrite: true
          compression-level: 1 # best speed

  generate:
    name: Go Generate
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - name: Go Setup ‚öôÔ∏è
        uses: ./.github/workflows/go.yml

      - name: Go Generate üìú
        run: go generate ./...

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üíª
        uses: actions/checkout@v4.1.7
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Download Unit Test Artifact ‚è¨
        uses: actions/download-artifact@v4.1.8
        with:
          name: unit-test-reports-${{ github.sha }}

      - name: Download Acceptance Test Artifact ‚è¨
        uses: actions/download-artifact@v4.1.8
        with:
          name: acc-test-reports-${{ github.sha }}

      - name: SonarCloud Scan üîç
        uses: sonarsource/sonarcloud-github-action@v2.3.0 # See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

