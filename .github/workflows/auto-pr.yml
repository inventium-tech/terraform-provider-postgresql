name: auto-pr
run-name: 'ðŸ¤– Auto PR - ${{ github.ref_name }}'

on:
  push:
    branches:
      - feat/**
      - fix/**
      - hotfix/**
      - release/**
      - refactor/**
      - chore/**
      - docs/**
      - style/**
      - test/**
      - ci/**
      - perf/**

permissions:
  pull-requests: write
  contents: read

jobs:
  auto-pr:
    name: Auto PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ðŸ’»
        uses: actions/checkout@v4.1.7

      - name: Create PR ðŸš€
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const refName = '${{ github.ref_name}}';
            let [accOwner, repoName] = [context.repo.owner, context.repo.repo];

            // get the list of open PRs for the current branch
            const openPRs = await github.rest.pulls.list({
              'owner': accOwner,
              'repo': repoName,
              'state': 'open',
              'base': 'dev',
              'head': `${context.payload.organization.login}:${refName}`,
            })

            if (openPRs.data.length != 0) {
              console.log(`PR already exists for ${refName}`);
              return;
            }

            const msg = context.payload.head_commit.message;        // get latest commit on the branch
            let [title, ...body] = msg.split('\n').filter((x) => !!x); // split the commit message into title and body
            if (!body.length) {
                commits = context.payload.commits;
                commits.shift(); // remove the latest commit because it's already grep
                body = commits.map((x) => '- ' + x.message.split('\n')[0]);
            }

            github.rest.pulls.create({
              'owner': context.repo.owner,    // The account owner of the repository
              'repo': context.repo.repo,      // The name of the repository without the .git extension
              'head': refName,                // The name of the branch where your changes are implemented
              'base': 'dev',                  // The name of the branch you want the changes pulled into
              'title': title,                 // The title of the pull request
              'body': body.join('\n'),        // The body of the pull request
              'maintainer_can_modify': true   // Allow maintainers to modify the PR
            });
